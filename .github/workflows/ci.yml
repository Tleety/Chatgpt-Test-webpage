name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-workflow:
    runs-on: ubuntu-latest
    name: Validate Workflow Configuration
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate GitHub Pages deployment configuration
      run: |
        echo "Validating GitHub Pages deployment configuration..."
        
        # Check if deploy job has environment configuration
        if ! grep -A 10 "deploy:" .github/workflows/ci.yml | grep -q "environment:"; then
          echo "❌ ERROR: Deploy job missing environment configuration"
          echo "GitHub Pages deployment requires environment.name to be set to 'github-pages'"
          exit 1
        fi
        
        # Check if environment name is correctly set
        if ! grep -A 15 "deploy:" .github/workflows/ci.yml | grep -q "name: github-pages"; then
          echo "❌ ERROR: Deploy job environment name must be 'github-pages'"
          exit 1
        fi
        
        # Check if required permissions are set
        if ! grep -q "pages: write" .github/workflows/ci.yml; then
          echo "❌ ERROR: Missing 'pages: write' permission"
          exit 1
        fi
        
        if ! grep -q "id-token: write" .github/workflows/ci.yml; then
          echo "❌ ERROR: Missing 'id-token: write' permission"
          exit 1
        fi
        
        echo "✅ GitHub Pages deployment configuration is valid"

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm test
      
    - name: Generate test report
      run: npm test -- --verbose --coverage
      if: always()

  build:
    runs-on: ubuntu-latest
    name: Build Project
    needs: [validate-workflow, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Go for WASM build
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Build Go WASM module
      run: |
        cd go-wasm-game
        GOOS=js GOARCH=wasm go build -o game.wasm
        
    - name: Setup Ruby for Jekyll
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: ./jekyll-site
        
    - name: Build Jekyll site
      run: |
        cd jekyll-site
        gem install bundler jekyll
        bundle install
        bundle exec jekyll build
        
    - name: Validate HTML structure
      run: |
        # Basic validation that HTML files are well-formed
        find . -name "*.html" -not -path "./node_modules/*" -not -path "./_site/*" -not -path "./jekyll-site/vendor/*" | xargs -I {} sh -c 'echo "Checking {}" && grep -q "</html>" "{}"'

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to GitHub Pages
    needs: [validate-workflow, test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate deployment info from GitHub data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        npm run generate-deployment-info
        git add -f deployment.json
        git commit -m "chore: update deployment info [skip ci]" || echo "No deployment info changes to commit"
        git push || echo "No changes to push"
      
    # Re-install dependencies after deployment info generation to ensure updated deployment.json is used
    - name: Install dependencies (post deployment info generation)
      run: npm ci
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Setup Go for WASM build
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Build Go WASM module
      run: |
        cd go-wasm-game
        GOOS=js GOARCH=wasm go build -o game.wasm
        
    - name: Setup Ruby for Jekyll
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: ./jekyll-site
        
    - name: Build Jekyll site
      run: |
        cd jekyll-site
        gem install bundler jekyll
        bundle install
        bundle exec jekyll build
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false